-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.recommendations
(
    star_id bigint NOT NULL,
    repo_name text COLLATE pg_catalog."default",
    stars bigint,
    issues bigint,
    description text COLLATE pg_catalog."default",
    contributors text[] COLLATE pg_catalog."default",
    total_stars bigint,
    avg_recency_score numeric,
    votes bigint,
    CONSTRAINT recommendations_pkey2 PRIMARY KEY (star_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.recommendations
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.recommendations TO anon;

GRANT ALL ON TABLE public.recommendations TO authenticated;

GRANT ALL ON TABLE public.recommendations TO postgres;

GRANT ALL ON TABLE public.recommendations TO service_role;

GRANT ALL ON TABLE public.recommendations TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    login text COLLATE pg_catalog."default",
    private boolean,
    open_issues integer,
    stars_data boolean,
    CONSTRAINT users_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.users TO anon;

GRANT ALL ON TABLE public.users TO authenticated;

GRANT ALL ON TABLE public.users TO postgres;

GRANT ALL ON TABLE public.users TO service_role;

GRANT ALL ON TABLE public.users TO supabase_admin;

COMMENT ON TABLE public.users
    IS 'open sauced users';

CREATE TABLE IF NOT EXISTS public.stars
(
    forks_count bigint,
    stargazers_count bigint,
    open_issues_count bigint,
    full_name text COLLATE pg_catalog."default",
    id bigint NOT NULL,
    CONSTRAINT stars_duplicate_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.stars
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.stars TO anon;

GRANT ALL ON TABLE public.stars TO authenticated;

GRANT ALL ON TABLE public.stars TO postgres;

GRANT ALL ON TABLE public.stars TO service_role;

GRANT ALL ON TABLE public.stars TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.user_stars
(
    star_id bigint NOT NULL,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    repo_name text COLLATE pg_catalog."default",
    recency_score smallint,
    description text COLLATE pg_catalog."default",
    issues bigint,
    stars bigint,
    contributors text[] COLLATE pg_catalog."default",
    CONSTRAINT user_stars_duplicate_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_stars
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.user_stars TO anon;

GRANT ALL ON TABLE public.user_stars TO authenticated;

GRANT ALL ON TABLE public.user_stars TO postgres;

GRANT ALL ON TABLE public.user_stars TO service_role;

GRANT ALL ON TABLE public.user_stars TO supabase_admin;

COMMENT ON COLUMN public.user_stars.recency_score
    IS 'Lower number means it was starred recently';

COMMENT ON COLUMN public.user_stars.description
    IS 'Description of the repository';

COMMENT ON COLUMN public.user_stars.issues
    IS 'Total amount of issues';

COMMENT ON COLUMN public.user_stars.stars
    IS 'Total amount of stars for the repository';

COMMENT ON COLUMN public.user_stars.contributors
    IS 'array of contributor names';

CREATE TABLE IF NOT EXISTS public.votes
(
    voteid integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    github_user_id bigint,
    repo_name text COLLATE pg_catalog."default",
    vote_code text COLLATE pg_catalog."default",
    CONSTRAINT votes_pkey PRIMARY KEY (voteid),
    CONSTRAINT votes_votes_received_key UNIQUE (vote_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.votes
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.votes TO anon;

GRANT ALL ON TABLE public.votes TO authenticated;

GRANT ALL ON TABLE public.votes TO postgres;

GRANT ALL ON TABLE public.votes TO service_role;

GRANT ALL ON TABLE public.votes TO supabase_admin;

COMMENT ON TABLE public.votes
    IS 'A collection of votes fro users';
CREATE POLICY "Enable access to all users"
    ON public.votes
    AS PERMISSIVE
    FOR ALL
    TO public
    USING (true);
